//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

&mt {
    quick-tap-ms = <125>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

/ {
    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
            require-prior-idle-ms = <75>;
            layers = <0>;
        };

        TabBASE {
            bindings = <&kp TAB>;
            key-positions = <10 11>;
            require-prior-idle-ms = <75>;
            layers = <0>;
        };

        dash {
            bindings = <&kp MINUS>;
            key-positions = <16 17>;
        };

        ctrlTAB {
            bindings = <&kp LC(TAB)>;
            key-positions = <10 11>;
            require-prior-idle-ms = <75>;
            layers = <1>;
        };
    };

    behaviors {
        holdtap2: holdtap2 {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLDTAP2";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
        };

        NUMWORD: NUMWORD {
            compatible = "zmk,behavior-caps-word";
            label = "NUMWORD";
            #binding-cells = <0>;
            continue-list = <N1 N2 N3 N4 N5 N6 N7 N8 N9 N0 PERIOD SLASH LEFT_PARENTHESIS RIGHT_PARENTHESIS>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "BASE";
            bindings = <
           &kp Q  &kp W  &kp E         &kp R       &kp T                &kp Y                      &kp U        &kp I      &kp O    &kp P
           &kp A  &kp S  &kp D         &kp F       &kp G                &kp H                      &kp J        &kp K      &kp L    &kp SEMICOLON
&sk LCTRL  &kp Z  &kp X  &kp C         &kp V       &kp B                &kp N                      &kp M        &kp COMMA  &kp DOT  &kp SQT        &kp MINUS
                         &sk LEFT_ALT  &sk LSHIFT  &holdtap2 1 SPACE    &mt RIGHT_SHIFT BACKSPACE  &lt 2 ENTER  &num_word NUMWORD
            >;
        };

        super_layer {
            bindings = <
           &kp EXCL   &kp AT_SIGN  &kp UP_ARROW    &kp DOLLAR       &kp PERCENT     &kp N7                         &kp N8        &kp N9      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
           &trans     &kp LEFT     &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp QUESTION    &kp N4                         &kp N5        &kp N6      &kp FSLH              &kp COLON
&kp LCTRL  &kp LC(Z)  &kp LC(X)    &kp LC(C)       &kp LC(V)        &kp SLASH       &kp N1                         &kp N2        &kp N3      &kp DOT               &kp DOUBLE_QUOTES      &kp PLUS
                                   &trans          &trans           &trans          &mt RIGHT_SHIFT LA(BACKSPACE)  &kp NUMBER_0  &kp PERIOD
            >;

            label = "super";
        };

        adjust {
            bindings = <
        &bt BT_CLR_ALL  &trans  &trans  &trans  &trans    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
        &trans          &trans  &trans  &trans  &trans    &trans        &trans        &trans        &trans        &trans
&trans  &trans          &trans  &trans  &trans  &trans    &trans        &trans        &trans        &trans        &trans        &bt BT_CLR
                                &trans  &trans  &trans    &trans        &trans        &trans
            >;
        };

        NUMWORD {
            bindings = <
        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp N7  &kp N8   &kp N9    &trans  &trans  &trans  &trans  &trans
        &trans                &kp FSLH               &kp N4  &kp N5   &kp N6    &trans  &trans  &trans  &trans  &trans
&trans  &trans                &trans                 &kp N1  &kp N2   &kp N3    &trans  &trans  &trans  &trans  &trans  &trans
                                                     &kp N0  &kp DOT  &trans    &trans  &trans  &trans
            >;
        };
    };
};
